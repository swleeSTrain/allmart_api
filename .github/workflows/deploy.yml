name: CI/CD Pipeline for Spring Boot on Amazon Linux

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Amazon Corretto JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_CONTENT }}" > .env

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test --no-daemon

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: spring-boot-app
          path: build/libs/*.jar

      - name: Upload .env file
        uses: actions/upload-artifact@v3
        with:
          name: env-file
          path: .env

  deploy:
    name: Deploy to EC2
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: spring-boot-app

      - name: Download .env file
        uses: actions/download-artifact@v3
        with:
          name: env-file

      - name: Deploy to EC2 instance
        env:
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ec2-user
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key *.jar ${USERNAME}@${HOST}:~/app/app.jar
          scp -o StrictHostKeyChecking=no -i private_key .env ${USERNAME}@${HOST}:~/app/.env
          ssh -o StrictHostKeyChecking=no -i private_key ${USERNAME}@${HOST} << EOF
            sudo yum update -y
            sudo amazon-linux-extras install java-openjdk17
            sudo mkdir -p /opt/myapp
            sudo mv ~/app/app.jar /opt/myapp/app.jar
            sudo mv ~/app/.env /opt/myapp/.env
            sudo systemctl daemon-reload
            sudo systemctl restart myapp.service || sudo systemctl start myapp.service
            sudo systemctl status myapp.service || true
          EOF
